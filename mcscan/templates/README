==================
Usage
==================
This software provides a clustering module for viewing the relationship of colinear segments in multiple genomes (or heavily redundant genomes). It takes the predicted pairwise segments from dynamic programming (DAGchainer in particular) and then try to build consensus segments from a set of related, overlapping segments.

Certain part of this package (dagchainer.cc) is based on the TIGR software DAGchainer (http://dagchainer.sourceforge.net). The program used this as an initial step to generate pairwise segments. The configure file reader is based on Rick Wagner's ConfigFile (http://www-personal.umich.edu/~wagnerr/ConfigFile.html). 

Reference:
Haas BJ, Delcher AL, Wortman JR, Salzberg SL. DAGchainer: a tool for mining segmental genome duplications and synteny.

Along with the DAGchainer guidelines, all code is copiable, distributable, modifiable, and usable without any restrictions, except for boost header files. Rick Wagner's ConfigFile is opern source code under MIT license.


==================
Installation
==================
Simply put "mcscan.tar.gz" in any directory, 

$ tar zxf mcscan.tar.gz

and type "make", the compiled codes are within the same directory as the source.

Then put copy of MCL executable within the same folder as mcscan (http://micans.org/mcl/)


==================
Inputs and outputs
==================
mcscan reads in three sources of data: a blast file, a MCL output file and a gff file. This may seem daunting at first, but these are very easy to retrieve. Have a look at the example.blast, example.mcl, example.gff in the folder.

Here is what can be used to genenerate the files.

The blast file is the following format:
<gene1> <gene2> <e-value>
easily genenerated from a m8 blast output format

$ cut -f 1,2,11 xyz.m8 > xyz.blast

The gff file contains the following format:
<molecule> <gene> <end5 position> <end3 position>
notice when you compare multiple genomes, formulate your molecular carefully to avoid duplicated names. The gff file can be generated by a similar cut command.

Once you have everything ready, put them in the same folder, if it is first run, default parameters are recommended, this will also create a "mcscan.cfg" file inside your working folder.

$ python mcscan.py xyz

The parameters can later be modified in config file "mcscan.cfg".

You can try 

$ python mcscan.py at_at

To multiply align Arabidopsis genome within the release folder.

Sometimes you may want to run just the pairwise synteny on .blast and .gff files, then you can try

$ mcscan at_at -p

Notice that to run this,  .mcl file is not required

==================
Changelog
==================
[ May 12, 2007 - version 0.0 ]
- initial release.
[ May 18, 2007 - version 0.1 ]
- major changes of SCS algorithm from L-MM to progressive pairwise joins.
- minor changes to the LCS scoring matrix.
[ May 25, 2007 - version 0.2 ]
- introduction of concept of "view" to aid visualization of multiple genome
  alignment.
[ Jun 08,  2007 - version 0.3 ]
- change of dynamic programming scheme from overlap alignment to local alignment.
[ Jun 10, 2007 - version 0.4 ]
- minor change of make_graph procedure.
[ Aug 05, 2007 - version 0.5 ]
- adding the option of of a "reference" genome
[ Oct 13, 2007 - version 0.6 ]
- adding a convenience python script to streamline the process
[ Mar 07, 2008 - version 0.7 ]
- implement statistical test for pairwise syntenic blocks

==================
Contact
==================
Any questions, problems, bugs are welcome and should be dumped to
Haibao Tang <bao@uga.edu>
Plant Genome Mapping Laboratory, University of Georgia

Create time: May 09, 2007

#---------------------------------------------------------------------------#
